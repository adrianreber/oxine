diff -up oxine-0.7.1/src/heap.c~ oxine-0.7.1/src/heap.c
--- oxine-0.7.1/src/heap.c~	2007-08-23 11:40:02.000000000 +0200
+++ oxine-0.7.1/src/heap.c	2015-05-16 14:35:21.555885860 +0200
@@ -325,7 +325,7 @@ RenderDesc (prefix_tag_t * prefix, char
 
 #else /* USE_OXINE_HEAP_MANAGEMENT */
 
-inline void *
+void *
 _gen_malloc (size_t size)
 {
     void *ptr = malloc (size);
@@ -336,7 +336,7 @@ _gen_malloc (size_t size)
     return ptr;
 }
 
-inline void *
+void *
 _gen_free (void *ptr)
 {
     free (ptr);
@@ -344,7 +344,7 @@ _gen_free (void *ptr)
     return NULL;
 }
 
-inline void
+void
 heapstat (void)
 {
 
diff -up oxine-0.7.1/src/heap.h~ oxine-0.7.1/src/heap.h
--- oxine-0.7.1/src/heap.h~	2007-08-23 11:40:02.000000000 +0200
+++ oxine-0.7.1/src/heap.h	2015-05-16 14:35:27.795048649 +0200
@@ -50,9 +50,9 @@ void heapstat (void);
 #else /* USE_OXINE_HEAP_MANAGEMENT */
 
 /* semipublic functions*/
-inline void *_gen_malloc (size_t);
-inline void *_gen_free (void *);
-inline void heapstat (void);
+void *_gen_malloc (size_t);
+void *_gen_free (void *);
+void heapstat (void);
 
 #define ho_malloc(size)             (_gen_malloc ((size_t)size))
 #define ho_realloc(ptr, size)       (realloc (ptr, (size_t)size))
diff -up oxine-0.7.1/src/utils_config.c~ oxine-0.7.1/src/utils_config.c
--- oxine-0.7.1/src/utils_config.c~	2007-08-23 11:40:02.000000000 +0200
+++ oxine-0.7.1/src/utils_config.c	2015-05-16 14:36:11.419173925 +0200
@@ -36,7 +36,7 @@
 extern oxine_t *oxine;
 
 
-inline int
+int
 config_lookup_entry (const char *key, xine_cfg_entry_t * entry)
 {
     int result = xine_config_lookup_entry (oxine->xine, key, entry);
@@ -47,14 +47,14 @@ config_lookup_entry (const char *key, xi
 }
 
 
-inline void
+void
 config_update_entry (xine_cfg_entry_t * entry)
 {
     xine_config_update_entry (oxine->xine, entry);
 }
 
 
-inline void
+void
 config_get_entry (const char *key, xine_cfg_entry_t * entry)
 {
     int result = xine_config_lookup_entry (oxine->xine, key, entry);
@@ -64,7 +64,7 @@ config_get_entry (const char *key, xine_
 }
 
 
-inline int
+int
 config_get_number (const char *key)
 {
     xine_cfg_entry_t entry;
@@ -73,7 +73,7 @@ config_get_number (const char *key)
 }
 
 
-inline int
+int
 config_set_number (const char *key, int value)
 {
     xine_cfg_entry_t entry;
@@ -84,7 +84,7 @@ config_set_number (const char *key, int
 }
 
 
-inline const char *
+const char *
 config_get_string (const char *key)
 {
     xine_cfg_entry_t entry;
@@ -93,7 +93,7 @@ config_get_string (const char *key)
 }
 
 
-inline bool
+bool
 config_get_bool (const char *key)
 {
     xine_cfg_entry_t entry;
@@ -102,7 +102,7 @@ config_get_bool (const char *key)
 }
 
 
-inline bool
+bool
 config_set_bool (const char *key, bool value)
 {
     xine_cfg_entry_t entry;
@@ -113,7 +113,7 @@ config_set_bool (const char *key, bool v
 }
 
 
-inline const char *
+const char *
 config_get_enum (const char *key)
 {
     xine_cfg_entry_t entry;
@@ -141,7 +141,7 @@ config_changed_handler (void *user_data,
 }
 
 
-inline const char *
+const char *
 config_register_string (const char *key, const char *init_value,
                         const char *label)
 {
@@ -151,7 +151,7 @@ config_register_string (const char *key,
 }
 
 
-inline int
+int
 config_register_number (const char *key, int init_value, const char *label)
 {
     return xine_config_register_num (oxine->xine, key, init_value,
@@ -160,7 +160,7 @@ config_register_number (const char *key,
 }
 
 
-inline int
+int
 config_register_range (const char *key, int init_value, int min, int max,
                        const char *label)
 {
@@ -170,7 +170,7 @@ config_register_range (const char *key,
 }
 
 
-inline int
+int
 config_register_enum (const char *key, int init_value, char **values,
                       const char *label)
 {
@@ -180,7 +180,7 @@ config_register_enum (const char *key, i
 }
 
 
-inline bool
+bool
 config_register_bool (const char *key, bool init_value, const char *label)
 {
     return xine_config_register_bool (oxine->xine, key, init_value,
@@ -189,7 +189,7 @@ config_register_bool (const char *key, b
 }
 
 
-inline void
+void
 config_save (void)
 {
     xine_config_save (oxine->xine, get_file_config ());
diff -up oxine-0.7.1/src/utils_config.h~ oxine-0.7.1/src/utils_config.h
--- oxine-0.7.1/src/utils_config.h~	2007-08-23 11:40:02.000000000 +0200
+++ oxine-0.7.1/src/utils_config.h	2015-05-16 14:36:13.527227804 +0200
@@ -29,55 +29,55 @@
 #include "oxine.h"
 
 
-inline int config_lookup_entry (const char *key, xine_cfg_entry_t * entry);
+int config_lookup_entry (const char *key, xine_cfg_entry_t * entry);
 
 
-inline void config_update_entry (xine_cfg_entry_t * entry);
+void config_update_entry (xine_cfg_entry_t * entry);
 
 
-inline void config_get_entry (const char *key, xine_cfg_entry_t * entry);
+void config_get_entry (const char *key, xine_cfg_entry_t * entry);
 
 
-inline int config_get_number (const char *key);
+int config_get_number (const char *key);
 
 
-inline int config_set_number (const char *key, int value);
+int config_set_number (const char *key, int value);
 
 
-inline const char *config_get_string (const char *key);
+const char *config_get_string (const char *key);
 
 
-inline bool config_get_bool (const char *key);
+bool config_get_bool (const char *key);
 
 
-inline bool config_set_bool (const char *key, bool value);
+bool config_set_bool (const char *key, bool value);
 
 
-inline const char *config_get_enum (const char *key);
+const char *config_get_enum (const char *key);
 
 
-inline const char *config_register_string (const char *key,
+const char *config_register_string (const char *key,
                                            const char *init_value,
                                            const char *label);
 
 
-inline int config_register_number (const char *key, int init_value,
+int config_register_number (const char *key, int init_value,
                                    const char *label);
 
 
-inline int config_register_range (const char *key, int init_value, int min,
+int config_register_range (const char *key, int init_value, int min,
                                   int max, const char *label);
 
 
-inline int config_register_enum (const char *key, int init_value,
+int config_register_enum (const char *key, int init_value,
                                  char **values, const char *label);
 
 
-inline bool config_register_bool (const char *key, bool init_value,
+bool config_register_bool (const char *key, bool init_value,
                                   const char *label);
 
 
-inline void config_save (void);
+void config_save (void);
 
 
 #endif /* HAVE_UTILS_CONFIG_H */
diff -up oxine-0.7.1/src/odk.c~ oxine-0.7.1/src/odk.c
--- oxine-0.7.1/src/odk.c~	2007-08-23 11:40:01.000000000 +0200
+++ oxine-0.7.1/src/odk.c	2015-05-16 23:37:09.298843235 +0200
@@ -210,49 +210,49 @@ odk_seek (odk_t * odk, int how)
 }
 
 
-inline bool
+bool
 odk_get_audio_lang (odk_t * odk, int channel, char *lang)
 {
     return xine_get_audio_lang (odk->main_stream, channel, lang);
 }
 
 
-inline bool
+bool
 odk_get_spu_lang (odk_t * odk, int channel, char *lang)
 {
     return xine_get_spu_lang (odk->main_stream, channel, lang);
 }
 
 
-inline const char *
+const char *
 odk_current_get_title (odk_t * odk)
 {
     return odk->current_title;
 }
 
 
-inline const char *
+const char *
 odk_current_get_mrl (odk_t * odk)
 {
     return odk->current_mrl;
 }
 
 
-inline bool
+bool
 odk_current_is_logo_mode (odk_t * odk)
 {
     return (odk->current_mode == ODK_MODE_LOGO);
 }
 
 
-inline bool
+bool
 odk_current_is_playback_mode (odk_t * odk)
 {
     return (odk->current_mode == ODK_MODE_NORMAL);
 }
 
 
-inline bool
+bool
 odk_current_is_vcd (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -262,7 +262,7 @@ odk_current_is_vcd (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_cdda (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -272,7 +272,7 @@ odk_current_is_cdda (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_dvd (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -282,7 +282,7 @@ odk_current_is_dvd (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_image (odk_t * odk)
 {
 #ifdef HAVE_IMAGE_PLAYBACK
@@ -293,7 +293,7 @@ odk_current_is_image (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_v4l (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -303,7 +303,7 @@ odk_current_is_v4l (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_dvb (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -313,7 +313,7 @@ odk_current_is_dvb (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_vdr (odk_t * odk)
 {
     const char *input = xine_get_meta_info (odk->main_stream,
@@ -323,7 +323,7 @@ odk_current_is_vdr (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_television (odk_t * odk)
 {
     return (odk_current_is_v4l (odk)
@@ -332,7 +332,7 @@ odk_current_is_television (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_is_audio (odk_t * odk)
 {
     return (!odk_current_is_image (odk)
@@ -340,7 +340,7 @@ odk_current_is_audio (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_has_audio (odk_t * odk)
 {
     return xine_get_stream_info (odk->main_stream,
@@ -348,7 +348,7 @@ odk_current_has_audio (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_has_video (odk_t * odk)
 {
     int has_video = (odk->novideo_post != NULL);
@@ -362,7 +362,7 @@ odk_current_has_video (odk_t * odk)
 }
 
 
-inline bool
+bool
 odk_current_has_chapters (odk_t * odk)
 {
     return xine_get_stream_info (odk->main_stream,
@@ -1367,7 +1367,7 @@ odk_show_window (odk_t * odk, bool fulls
 }
 
 
-inline void
+void
 odk_hide_window (odk_t * odk)
 {
     odk->win->hide (odk->win);
@@ -1389,14 +1389,14 @@ odk_window_set_fullscreen (odk_t * odk,
 }
 
 
-inline bool
+bool
 odk_window_is_fullscreen (odk_t * odk)
 {
     return odk->win->is_fullscreen (odk->win);
 }
 
 
-inline void
+void
 odk_run (odk_t * odk)
 {
     debug (" event loop thread: 0x%X", (int) pthread_self ());
@@ -1404,7 +1404,7 @@ odk_run (odk_t * odk)
 }
 
 
-inline void
+void
 odk_exit (odk_t * odk)
 {
     odk->win->leave_event_loop (odk->win);
diff -up oxine-0.7.1/src/odk.h~ oxine-0.7.1/src/odk.h
--- oxine-0.7.1/src/odk.h~	2007-08-24 10:22:04.000000000 +0200
+++ oxine-0.7.1/src/odk.h	2015-05-16 23:37:12.520843278 +0200
@@ -371,67 +371,67 @@ char *odk_get_stream_param_value_as_stri
 
 
 /// Returns the title of the current stream.
-inline const char *odk_current_get_title (odk_t * odk);
+const char *odk_current_get_title (odk_t * odk);
 
 
 /// Returns the MRL of the current stream.
-inline const char *odk_current_get_mrl (odk_t * odk);
+const char *odk_current_get_mrl (odk_t * odk);
 
 
 /// Returns TRUE if the current mode is LOGO mode.
-inline bool odk_current_is_logo_mode (odk_t * odk);
+bool odk_current_is_logo_mode (odk_t * odk);
 
 
 /// Returns TRUE if the current mode is NORMAL mode.
-inline bool odk_current_is_playback_mode (odk_t * odk);
+bool odk_current_is_playback_mode (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a DVD stream.
-inline bool odk_current_is_dvd (odk_t * odk);
+bool odk_current_is_dvd (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a video CD stream.
-inline bool odk_current_is_vcd (odk_t * odk);
+bool odk_current_is_vcd (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a V4L stream.
-inline bool odk_current_is_v4l (odk_t * odk);
+bool odk_current_is_v4l (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a DVB stream.
-inline bool odk_current_is_dvb (odk_t * odk);
+bool odk_current_is_dvb (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a VDR stream.
-inline bool odk_current_is_vdr (odk_t * odk);
+bool odk_current_is_vdr (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a television stream.
-inline bool odk_current_is_television (odk_t * odk);
+bool odk_current_is_television (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is a audio CD stream.
-inline bool odk_current_is_cdda (odk_t * odk);
+bool odk_current_is_cdda (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is an image.
-inline bool odk_current_is_image (odk_t * odk);
+bool odk_current_is_image (odk_t * odk);
 
 
 /// Returns TRUE if the current stream is audio only.
-inline bool odk_current_is_audio (odk_t * odk);
+bool odk_current_is_audio (odk_t * odk);
 
 
 /// Returns TRUE if the current stream has video.
-inline bool odk_current_has_video (odk_t * odk);
+bool odk_current_has_video (odk_t * odk);
 
 
 /// Returns TRUE if the current stream has audio.
-inline bool odk_current_has_audio (odk_t * odk);
+bool odk_current_has_audio (odk_t * odk);
 
 
 /// Returns TRUE if the current stream has chapters.
-inline bool odk_current_has_chapters (odk_t * odk);
+bool odk_current_has_chapters (odk_t * odk);
 
 
 /// Returns meta information of the specified type.
@@ -451,7 +451,7 @@ uint32_t odk_get_stream_info (odk_t * od
  *                              least XINE_LANG_MAX characters long.
  * @return                      On success TRUE is returned.
  */
-inline bool odk_get_spu_lang (odk_t * odk, int channel, char *lang);
+bool odk_get_spu_lang (odk_t * odk, int channel, char *lang);
 
 
 /**
@@ -463,7 +463,7 @@ inline bool odk_get_spu_lang (odk_t * od
  *                              least XINE_LANG_MAX characters long.
  * @return                      On success TRUE is returned.
  */
-inline bool odk_get_audio_lang (odk_t * odk, int channel, char *lang);
+bool odk_get_audio_lang (odk_t * odk, int channel, char *lang);
 
 
 /**
